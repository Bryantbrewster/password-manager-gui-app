from tkinter import *
from tkinter import messagebox
import random
import pyperclip

# ---------------------------- PASSWORD GENERATOR ------------------------------- #
def generate_password():
    letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
    numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
    symbols = ['!', '#', '$', '%', '&', '(', ')', '*', '+']

    nr_letters = random.randint(8, 10)
    nr_symbols = random.randint(2, 4)
    nr_numbers = random.randint(2, 4)

    password_list = []

    # new_list = [new_item for item in list]

    random_letters = [random.choice(letters) for letter in range(nr_letters)]
    random_symbols = [random.choice(symbols) for symbol in range(nr_symbols)]
    random_numbers = [random.choice(numbers) for number in range(nr_numbers)]

    # for char in range(nr_letters):
    #   password_list.append(random.choice(letters))
    #
    # for char in range(nr_symbols):
    #   password_list += random.choice(symbols)
    #
    # for char in range(nr_numbers):
    #   password_list += random.choice(numbers)

    password_list = random_letters + random_symbols + random_numbers
    random.shuffle(password_list)

    password = ""
    for char in password_list:
      password += char

    pyperclip.copy(password)
    password_entry.insert(0, password)
# ---------------------------- SAVE PASSWORD ------------------------------- #

# ---------------------------- UI SETUP ------------------------------- #

# TODO
# add in comments explaining what is going on for my BitBucket

def save():
    saved_website_name = website_entry.get()
    saved_username = username_entry.get()
    saved_password = password_entry.get()

    if len(saved_website_name) == 0 or len(saved_password) == 0:
        messagebox.showinfo(title="Oh no!", message="Please don't leave any fields empty!")
        return

    is_ok = messagebox.askokcancel(title=saved_website_name, message=f"These are the details entered: \n Username:{saved_username} "
                                                                    f"\n Password: {saved_password} \n Is it ok to save?")
    if is_ok:
        with open("password_vault.txt", "a") as password_vault:
            vault_entry = f"{saved_website_name} | {saved_username} | {saved_password} \n"
            password_vault.write(vault_entry)
            website_entry.delete(0, END)
            password_entry.delete(0, END)

window = Tk()
window.title("Password Manager")
window.config(padx=50, pady=50)


lock_pic = PhotoImage(file='./logo.png')
canvas = Canvas(width=200, height=200)
canvas.create_image(100, 100, image=lock_pic)
canvas.grid(column=1, row=0)

website_label = Label(text='Website:')
website_label.grid(column=0, row=1)

website_entry = Entry(width=35)
website_entry.grid(column=1, row=1, columnspan=2)
website_entry.focus()

username_label = Label(text='Email/Username:')
username_label.grid(column=0, row=2)

username_entry = Entry(width=35)
username_entry.grid(column=1, row=2, columnspan=2)
username_entry.insert(0, "bryantbrewster@gmail.com")

password_label = Label(text='Password:')
password_label.grid(column=0, row=3)

password_entry = Entry(width=21)
password_entry.grid(column=1, row=3)

generate_password_button = Button(text="Generate Password", command=generate_password)
generate_password_button.grid(column=2, row=3)

add_button = Button(text="Add", width=36, command=save)
add_button.grid(column=1, row=4, columnspan=2)


# password_vault = open("password_vault.txt", "a")











# password_vault.close()

window.mainloop()